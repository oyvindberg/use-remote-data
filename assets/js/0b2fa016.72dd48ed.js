"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[151],{2168:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>d,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"typed-errors","title":"Typed errors","description":"An interesting feature of use-remote-data is its ability to handle typed errors,","source":"@site/docs/typed-errors.mdx","sourceDirName":".","slug":"/typed-errors","permalink":"/use-remote-data/docs/typed-errors","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/edit/master/website/docs/typed-errors.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Dynamic Data","permalink":"/use-remote-data/docs/dynamic-data"},"next":{"title":"Lazy loading","permalink":"/use-remote-data/docs/lazy-loading"}}');var n=s(4848),o=s(8453),a=s(8794);const d={},i="Typed errors",c={},l=[{value:"Why Use Typed Errors?",id:"why-use-typed-errors",level:2},{value:"Render typed errors",id:"render-typed-errors",level:2}];function h(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"typed-errors",children:"Typed errors"})}),"\n",(0,n.jsxs)(r.p,{children:["An interesting feature of ",(0,n.jsx)(r.code,{children:"use-remote-data"})," is its ability to handle ",(0,n.jsx)(r.strong,{children:"typed errors"}),",\nletting you differentiate domain-level failures (like ",(0,n.jsx)(r.code,{children:"PersonNotFound"})," or ",(0,n.jsx)(r.code,{children:"PersonDeleted"}),")\nfrom unexpected ones (network failed)."]}),"\n",(0,n.jsx)(r.p,{children:"By default, all error situations are unexpected \u2014 caused by a failed promise or a thrown exception."}),"\n",(0,n.jsxs)(r.p,{children:["However, if consume an API, say a GraphQL schema that returns various error objects,\nyou can choose to use ",(0,n.jsx)(r.code,{children:"useRemoteDataEither"})," (or ",(0,n.jsx)(r.code,{children:"useRemoteDatasEither"})," for ",(0,n.jsx)(r.a,{href:"dynamic-data",children:"dynamic data"}),")\ninstead to capture these domain-level errors."]}),"\n",(0,n.jsxs)(r.p,{children:["This returns a ",(0,n.jsx)(r.code,{children:"RemoteDataStore<T, E>"}),", where ",(0,n.jsx)(r.code,{children:"E"})," represents your custom error type."]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h2,{id:"why-use-typed-errors",children:"Why Use Typed Errors?"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Clarity:"})," Preserve the exact structure of your GraphQL or REST error responses instead of flattening everything into a generic ",(0,n.jsx)(r.code,{children:"Error"}),"."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.strong,{children:"Precise rendering:"})," Make decisions in your React components about each error variant, offering more relevant messages or fallback flows."]}),"\n"]}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h2,{id:"render-typed-errors",children:"Render typed errors"}),"\n",(0,n.jsxs)(r.p,{children:["You'll need to prove a custom error component to ",(0,n.jsx)(r.code,{children:"WithRemoteData"}),".\nTypically, you can also create a specialized wrapper component around ",(0,n.jsx)(r.code,{children:"WithRemoteData"})," that uses your custom error-handling component."]}),"\n",(0,n.jsx)(r.p,{children:"By doing so, your UI can leverage the fully typed nature of these errors,\npresenting tailored messages or fallback flows for each distinct error variant."}),"\n",(0,n.jsxs)(r.p,{children:["Meanwhile, any genuinely unexpected runtime error still appears as ",(0,n.jsx)(r.code,{children:"WeakError"}),"."]}),"\n",(0,n.jsxs)(r.p,{children:["This is a reasonably long example with a fake GraphQL schema that can return a ",(0,n.jsx)(r.code,{children:"PersonNotFoundError"})," or ",(0,n.jsx)(r.code,{children:"PersonDeletedError"}),"."]}),"\n",(0,n.jsx)(a.Y,{snippet:"typed-errors"})]})}function u(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}}}]);