"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[854],{9764:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>h,contentTitle:()=>d,default:()=>u,frontMatter:()=>r,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"sharing-data-with-children","title":"Sharing Data with Child Components","description":"A common pattern is to fetch data high in your component tree and share it among multiple routes or components,","source":"@site/docs/sharing-data-with-children.mdx","sourceDirName":".","slug":"/sharing-data-with-children","permalink":"/use-remote-data/docs/sharing-data-with-children","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/edit/master/website/docs/sharing-data-with-children.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Invalidation / Refresh data","permalink":"/use-remote-data/docs/invalidation"},"next":{"title":"Updates (Write Operations)","permalink":"/use-remote-data/docs/updates"}}');var a=s(4848),i=s(8453),o=s(8794);const r={},d="Sharing Data with Child Components",h={},c=[{value:"Should I Pass <code>RemoteDataStore&lt;T&gt;</code> or Just <code>T</code>?",id:"should-i-pass-remotedatastoret-or-just-t",level:3}];function l(e){const t={blockquote:"blockquote",code:"code",em:"em",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"sharing-data-with-child-components",children:"Sharing Data with Child Components"})}),"\n",(0,a.jsx)(t.p,{children:"A common pattern is to fetch data high in your component tree and share it among multiple routes or components,\nleveraging built-in caching so that each route doesn\u2019t refetch unnecessarily."}),"\n",(0,a.jsxs)(t.p,{children:["Since ",(0,a.jsx)(t.code,{children:"RemoteDataStore"})," is both ",(0,a.jsx)(t.em,{children:"lazy"})," and ",(0,a.jsx)(t.em,{children:"caching"}),", you can pass the same store to multiple children.\nData is fetched only once, and the results remain in memory as long as a store is in use."]}),"\n",(0,a.jsx)(o.Y,{snippet:"use_twice"}),"\n",(0,a.jsxs)(t.h3,{id:"should-i-pass-remotedatastoret-or-just-t",children:["Should I Pass ",(0,a.jsx)(t.code,{children:"RemoteDataStore<T>"})," or Just ",(0,a.jsx)(t.code,{children:"T"}),"?"]}),"\n",(0,a.jsx)(t.p,{children:"There\u2019s a subtle difference:"}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.em,{children:"Does the child component need to render anything while data is still loading?"})}),"\n"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["If yes, consider passing a ",(0,a.jsx)(t.code,{children:"RemoteDataStore<T>"})," so the child can handle loading/failure states."]}),"\n",(0,a.jsxs)(t.li,{children:["Otherwise, if the parent already handles loading and passes down final data, just pass ",(0,a.jsx)(t.code,{children:"T"}),"."]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}}}]);