(self.webpackChunksite=self.webpackChunksite||[]).push([[4],{8005:function(e,t,n){"use strict";n.r(t),n.d(t,{Component:function(){return o}});var a=n(7294),r=n(9250);var o=function(){var e=(0,r.WV)((function(){return e=1,void 0===t&&(t=1e3),new Promise((function(n){return setTimeout((function(){return n(e)}),t)}));var e,t}));return a.createElement(r.mJ,{store:e},(function(e){return a.createElement("span",null,e)}))}},7934:function(e,t,n){"use strict";n.r(t),n.d(t,{Component:function(){return i}});var a=n(7294),r=n(9250);function o(e,t){return void 0===t&&(t=1e3),new Promise((function(n){return setTimeout((function(){return n(e)}),t)}))}var i=function(){var e=(0,r.WV)((function(){return o(1)})),t=(0,r.WV)((function(){return o("Hello")})),n=r.lq.all(e,t);return a.createElement(r.mJ,{store:n},(function(e){var t=e[0],n=e[1];return a.createElement("span",null,t," and ",n)}))}},6486:function(e,t,n){"use strict";n.r(t),n.d(t,{Component:function(){return s},Column:function(){return l}});var a=n(7294),r=n(9250),o=new Map,i=function(e){return new Promise((function(t){var n=o.get(e)||0;o.set(e,n+1),setTimeout((function(){return t(e+": "+n)}),500)}))},s=function(){var e=(0,r.Ht)(i,{ttlMillis:1e3}),t=a.useState("a, b,d"),n=t[0],o=t[1],s=n.split(",").map((function(e){return e.trim()})).filter((function(e){return e.length>0})),c=e.getMany(s);return a.createElement("div",null,"Add/remove stores by editing the text, it's split by comma.",a.createElement("input",{value:n,onChange:function(e){return o(e.currentTarget.value)}}),a.createElement("div",{style:{display:"flex",justifyContent:"space-around"}},a.createElement(l,{rows:c}),a.createElement(l,{rows:c})))},l=function(e){var t=e.rows.map((function(e,t){return a.createElement(r.mJ,{store:e,key:t},(function(e,t){return a.createElement("p",null,a.createElement("span",{style:{color:t?"darkgray":"black"}},e))}))}));return a.createElement("div",null,t)}},4872:function(e,t,n){"use strict";n.r(t),n.d(t,{Component:function(){return c}});var a=n(7294),r=n(9250),o=0,i=function(){return new Promise((function(e){o+=1,setTimeout((function(){return e(o)}),1e3)}))},s=0,l=function(){return new Promise((function(e,t){(s+=1)%10==0?t(s+" was dividable by 10"):e(s)}))},c=function(){var e=(0,r.WV)(i,{ttlMillis:1e3}),t=(0,r.WV)(l,{ttlMillis:100});return a.createElement(r.mJ,{store:r.lq.all(e,t)},(function(e){var t=e[0],n=e[1];return a.createElement("span",null,t," - ",n)}))}},7172:function(e,t,n){"use strict";n.r(t),n.d(t,{Component:function(){return s}});var a=n(7294),r=n(9250),o=0,i=function(){return new Promise((function(e){o+=1,setTimeout((function(){return e(o)}),1e3)}))},s=function(){var e=(0,r.WV)(i,{ttlMillis:2e3});return a.createElement(r.mJ,{store:e},(function(e,t){return a.createElement("span",{style:{color:t?"darkgray":"black"}},e)}))}},6153:function(e,t,n){"use strict";n.r(t),n.d(t,{Component:function(){return s}});var a=n(7294),r=n(9250),o=0,i=function(){return new Promise((function(e){o+=1,setTimeout((function(){return e(o)}),1e3)}))},s=function(){var e=a.useState(1),t=e[0],n=e[1],o=(0,r.WV)(i,{dependencies:[t]});return a.createElement("div",null,a.createElement("button",{onClick:function(){return n(t+1)}},"Bump dep"),a.createElement("br",null),a.createElement(r.mJ,{store:o},(function(e,t){return a.createElement("span",{style:{color:t?"darkgray":"black"}},e)})))}},8917:function(e,t,n){"use strict";n.r(t),n.d(t,{Component:function(){return s}});var a=n(7294),r=n(9250),o=0,i=function(){return new Promise((function(e){o+=1,setTimeout((function(){return e(o)}),1e3)}))},s=function(){var e=a.useState(!0),t=e[0],n=e[1],o=(0,r.WV)(i,{ttlMillis:t?1e3:void 0});return a.createElement("div",null,a.createElement("label",null,"Autorefresh:",a.createElement("input",{type:"checkbox",onChange:function(e){return n(!t)},checked:t})),a.createElement("br",null),a.createElement(r.mJ,{store:o},(function(e,t){return a.createElement("span",{style:{color:t?"darkgray":"black"}},e)})))}},8073:function(e,t,n){"use strict";n.r(t),n.d(t,{Component:function(){return o}});var a=n(7294),r=n(9250),o=function(){var e=a.useState(""),t=e[0],n=e[1],o=a.useState(!1),i=o[0],s=o[1],l=(0,r.WV)((function(){return function(e){return new Promise((function(t){setTimeout((function(){return t("created user with name "+e+" and id #1")}),1e3)}))}(t)}),{ttlMillis:2e3});return a.createElement("div",null,a.createElement("h4",null,"Create user"),a.createElement("label",null,"name:",a.createElement("input",{onChange:function(e){return n(e.currentTarget.value)},value:t})),a.createElement("button",{onClick:function(){return s(!0)}},"Create user"),i&&a.createElement(r.mJ,{store:l},(function(e){return a.createElement("p",null,e)})))}},3426:function(e,t,n){"use strict";n.r(t),n.d(t,{Component:function(){return s},Child:function(){return l}});var a=n(7294),r=n(9250),o=0,i=function(){return new Promise((function(e){o+=1,setTimeout((function(){return e(o)}),1e3)}))},s=function(){var e=(0,r.WV)(i,{ttlMillis:2e3});return a.createElement("div",null,a.createElement(l,{store:e}),a.createElement(l,{store:e}))},l=function(e){var t=e.store;return a.createElement(r.mJ,{store:t},(function(e,t){return a.createElement("p",null,a.createElement("span",{style:{color:t?"darkgray":"black"}},e))}))}},5561:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return c}});var a=n(7294),r=n(986),o=n(6742),i=n(2026),s=n(7499),l=function(e){var t=e.snippet,r=(0,i.Z)().isDarkTheme?n(9452).Z:n(4146).Z,l=n(5362)("./"+t+".tsx").default,c=n(2523)("./"+t).Component,u=a.useState(0),m=u[0],d=u[1];return a.createElement("div",null,a.createElement(s.Z,{language:"typescript",style:r},l),a.createElement("div",null,a.createElement("div",null,a.createElement(o.Z,{className:"button button--secondary button--sm",onClick:function(){return d(m+1)}},0===m?"Run snippet":"Run again")),m>0&&a.createElement("div",{style:{padding:"1em",margin:"1em",backgroundColor:"#92E0D0FF"}},a.createElement(c,{key:m}))))},c=function(){return a.createElement(r.Z,{title:"Getting started",description:"Getting started"},a.createElement("main",{className:"container"},a.createElement("h1",{className:"padding-top"},"Getting started"),a.createElement("div",null,a.createElement("h2",{className:"padding-top"},"Installation"),a.createElement("pre",null,a.createElement("code",null,"yarn add use-remote-data"))),a.createElement("br",null),a.createElement("div",null,a.createElement("h2",{className:"padding-top"},"Basic usage"),"The entry point to the library is a React hook called ",a.createElement("code",null,"useRemoteData"),", which takes one parameter: A function which produces a ",a.createElement("code",null,"Promise"),". It needs to be a function and not a straight ",a.createElement("code",null,"Promise"),"in case it fails and needs to be restarted.",a.createElement("br",null),a.createElement("br",null),"According to the rules for React hooks they can only be used within a component, as seen below.",a.createElement("br",null),a.createElement("br",null),"The thing we get back is a ",a.createElement("code",null,"RemoteDataStore","<T>"),", which is where we keep the state the request is currently in.",a.createElement("br",null),a.createElement("br",null),"The last thing which happens in this example is that we use a provided React component called"," ",a.createElement("code",null,"WithRemoteData"),". This component requires two props:",a.createElement("ul",null,a.createElement("li",null,"the store we got from ",a.createElement("code",null,"useRemoteData")),a.createElement("li",null,"a ",a.createElement(o.Z,{to:"https://reactjs.org/docs/render-props.html"},"render prop "),"which specifies how to render once we have all the data we asked for by passing stores")),"Out of the box this component renders dots when waiting for data. Expected usage is that you copy/paste it into your codebase and adjust the rendering to suit your needs",a.createElement(l,{snippet:"basic_usage"})),a.createElement("div",null,a.createElement("h2",{className:"padding-top"},"Combining stores"),"The ",a.createElement("code",null,"RemoteDataStore")," structure is composable in the sense that you can combine multiple stores into one which will return the product of all once all the data is available. The semantics are what you would expect. For instance if you combine one request which is currently"," ",a.createElement("code",null,"RemoteData.Pending"),"with one which is ",a.createElement("code",null,"RemoteData.Yes"),", the result will be ",a.createElement("code",null,"RemoteData.Pending"),".",a.createElement("br",null),a.createElement("br",null),"All types are tracked, and in the render prop given to ",a.createElement("code",null,"WithRemoteData")," we use"," ",a.createElement(o.Z,{to:"https://levelup.gitconnected.com/crazy-powerful-typescript-tuple-types-9b121e0a690c"},"tuple destructuring"," "),"to pick apart the values again.",a.createElement("br",null),a.createElement("br",null),a.createElement(l,{snippet:"combine"})),a.createElement("div",null,a.createElement("h2",null,"Refreshing data"),a.createElement("code",null,"use-remote-data")," supports seamless invalidation and refreshing of data, by specifying the optional",a.createElement("code",null,"ttlMillis")," parameter to ",a.createElement("code",null,"use-remote-data"),". You specify how many milliseconds the data is valid after it is received.",a.createElement("br",null),a.createElement("br",null),"Once the data is deemed invalidated, you are informed through the second ",a.createElement("code",null,"isInvalidated"),"argument in the render prop given to ",a.createElement("code",null,"WithRemoteData"),". With that bit of information you can for instance render the old data as gray or deactivated while the application is waiting for fresh data.",a.createElement("br",null),a.createElement("br",null),"Note that since the design of ",a.createElement("code",null,"RemoteDataStore")," is ",a.createElement("em",null," lazy "),", values are only invalidated and refreshed ",a.createElement("em",null," while the data is used by a component "),". However, on first render afterwards the invalidation is noticed and you'll be informed through ",a.createElement("code",null,"isInvalidated")," as normal.",a.createElement(l,{snippet:"invalidation"}),a.createElement("br",null),a.createElement("br",null),a.createElement("h3",{className:"padding-top"},"Only sometimes?"),"If you want to turn auto-refreshing on and off, that easy to do as well, just set the"," ",a.createElement("code",null,"ttlMillis"),"parameter accordingly",a.createElement(l,{snippet:"invalidation_sometimes"})),a.createElement("div",null,a.createElement("h2",{className:"padding-top"},"Sharing data with child components"),"A very common use-case is that you have an app with for instance many routes. Each route will need some different subsets of data, and you want to keep as much data as possible cached when the user navigates back and forth.",a.createElement("br",null),a.createElement("br",null),a.createElement("code",null,"use-remote-data")," supports this use-case well because ",a.createElement("code",null,"RemoteDataStore")," is",a.createElement("em",null," lazy ")," and ",a.createElement("em",null," caching "),". You can define all the relevant data stores high up in the hierarchy, and data lifetimes neatly follows component lifecycles. You can then freely pass a store to any number of code paths, and the data will only be fetched once.",a.createElement(l,{snippet:"use_twice"}),a.createElement("br",null),a.createElement("br",null),a.createElement("h3",{className:"padding-top"},"Should I pass RemoteDataStore","<T>"," or just T? "),"There has been some confusion about this, but there is a semantic difference.",a.createElement("em",null," Can this component render without the data? "),a.createElement("br",null),"Typically you may want to draw an outline of the application before you get any data, and the components which do that should probably accept a",a.createElement("code",null,"RemoteDataStore")," in props.",a.createElement("br",null),a.createElement("br",null),"In most other cases it's better to just pass the value after it has been retrieved, for the singular reason that it's simpler."),a.createElement("div",null,a.createElement("h2",{className:"padding-top"},"Handling failure"),"Another defining feature of ",a.createElement("code",null,"use-remote-data")," is the principled error handling and the retry functionality. Developers typically make an ad-hoc attempt at the former, while not many have the discipline to also do the latter.",a.createElement("br",null),a.createElement("br",null),"This example creates a ",a.createElement("code",null,"Promise")," which fails every tenth time it is called. The sometimes-failing store is combined with another store which never fails, and you should hit"," ",a.createElement("em",null," retry "),"a few times to see the interaction.",a.createElement(l,{snippet:"handling_failure"})),a.createElement("div",null,a.createElement("h2",{className:"padding-top"},"Dynamic data"),"Do you want to fetch paginated data? fetch quite a few ids out of many? You're covered here too, by the",a.createElement("code",null,"useRemoteDatas")," (plural) hook. In this case you provide a function to a ",a.createElement("code",null,"Promise")," ","which takes a parameter, and you ask the resulting ",a.createElement("code",null,"RemoteDataStores")," structure for the corresponding pages/ids.",a.createElement(l,{snippet:"dynamic"})),a.createElement("div",null,a.createElement("h2",{className:"padding-top"},"Invalidate on dependency change"),a.createElement("code",null,"use-remote-data")," follows the spirit of ",a.createElement("code",null,"useEffect")," and friends by supporting an array of dependencies. When a change is detected in that list, the data is automatically invalidated. Note that currently the ",a.createElement("code",null,"JSON.stringify"),"ed version of the dependencies is compared.",a.createElement(l,{snippet:"invalidation_dependencies"})),a.createElement("div",null,a.createElement("h2",{className:"padding-top"},"Updates"),"Life is not only read-only though. Here is an example of sending data",a.createElement(l,{snippet:"update"}))))}},208:function(e,t,n){"use strict";n.r(t),t.default="import * as React from 'react';\nimport { RemoteDataStore, useRemoteData, WithRemoteData } from 'use-remote-data';\n\nfunction produce<T>(value: T, delay: number = 1000): Promise<T> {\n  return new Promise((resolve) => setTimeout(() => resolve(value), delay));\n}\n\nexport const Component: React.FC = () => {\n  const computeOne: RemoteDataStore<number> =\n    useRemoteData(() => produce(1));\n\n  return <WithRemoteData store={computeOne}>\n      {(num: number) => <span>{num}</span>}\n    </WithRemoteData>;\n};\n"},407:function(e,t,n){"use strict";n.r(t),t.default="import * as React from 'react';\nimport { RemoteDataStore, useRemoteData, WithRemoteData } from 'use-remote-data';\n\nfunction produce<T>(value: T, delay: number = 1000): Promise<T> {\n    return new Promise((resolve) => setTimeout(() => resolve(value), delay));\n}\n\nexport const Component: React.FC = () => {\n    const computeOne = useRemoteData(() => produce(1));\n    const computeString = useRemoteData(() => produce('Hello'));\n\n    const combinedStore =\n      RemoteDataStore.all(computeOne, computeString);\n\n    return <WithRemoteData store={combinedStore}>\n            {([num, string]) => <span>{num} and {string}</span>}\n        </WithRemoteData>;\n};\n"},4883:function(e,t,n){"use strict";n.r(t),t.default="import * as React from 'react';\nimport { RemoteDataStore, RemoteDataStores, useRemoteDatas, WithRemoteData } from 'use-remote-data';\n\nlet is = new Map<string, number>();\n\nconst freshData = (key: string): Promise<string> =>\n    new Promise((resolve) => {\n        const num = is.get(key) || 0;\n        is.set(key, num + 1);\n        setTimeout(() => resolve(`${key}: ${num}`), 500);\n    });\n\nexport const Component: React.FC = () => {\n    // provide `freshData` function\n    const stores: RemoteDataStores<string, string> = useRemoteDatas(freshData, { ttlMillis: 1000 });\n\n  const [wanted, setWanted] = React.useState('a, b,d');\n\n    const parsedWanted: readonly string[] =\n      wanted\n        .split(',')\n        .map((s) => s.trim())\n        .filter((s) => s.length > 0);\n\n    const currentStores: readonly RemoteDataStore<string>[] =\n      stores.getMany(parsedWanted);\n\n    return (\n        <div>\n            Add/remove stores by editing the text, it's split by comma.\n            <input value={wanted} onChange={(e) => setWanted(e.currentTarget.value)} />\n            <div style={{ display: 'flex', justifyContent: 'space-around' }}>\n              <Column rows={currentStores} />\n              <Column rows={currentStores} />\n            </div>\n        </div>\n    );\n};\n\nexport const Column: React.FC<{ rows: readonly RemoteDataStore<string>[] }> = ({ rows }) => {\n    const renderedRows = rows.map((store, idx) => (\n        <WithRemoteData store={store} key={idx}>\n            {(value, isInvalidated) => <p><span style={{ color: isInvalidated ? 'darkgray' : 'black' }}>{value}</span></p>}\n        </WithRemoteData>\n    ));\n    return <div>{renderedRows}</div>;\n};\n"},4598:function(e,t,n){"use strict";n.r(t),t.default="import * as React from 'react';\nimport { RemoteDataStore, useRemoteData, WithRemoteData } from 'use-remote-data';\n\nvar i = 0;\nconst freshData = (): Promise<number> =>\n    new Promise((resolve) => {\n        i += 1;\n        setTimeout(() => resolve(i), 1000);\n    });\n\nvar j = 0;\nconst failSometimes = (): Promise<number> =>\n    new Promise((resolve, reject) => {\n        j += 1;\n        if (j % 10 === 0) reject(`${j} was dividable by 10`);\n        else resolve(j);\n    });\n\nexport const Component: React.FC = () => {\n    const one = useRemoteData(freshData, { ttlMillis: 1000 });\n    const two = useRemoteData(failSometimes, { ttlMillis: 100 });\n\n    return <WithRemoteData store={RemoteDataStore.all(one, two)}>\n            {([num1, num2]) => <span>{num1} - {num2}</span>}\n        </WithRemoteData>;\n};\n"},5136:function(e,t,n){"use strict";n.r(t),t.default="import * as React from 'react';\nimport { useRemoteData, WithRemoteData } from 'use-remote-data';\n\nvar i = 0;\nconst freshData = (): Promise<number> =>\n    new Promise((resolve) => {\n        i += 1;\n        setTimeout(() => resolve(i), 1000);\n    });\n\nexport const Component: React.FC = () => {\n    const store = useRemoteData(freshData, { ttlMillis: 2000 });\n\n    return (\n        <WithRemoteData store={store}>\n            {(num, isInvalidated) =>\n              <span style={{ color: isInvalidated ? 'darkgray' : 'black' }}>{num}</span>\n            }\n        </WithRemoteData>\n    );\n};\n"},2086:function(e,t,n){"use strict";n.r(t),t.default="import * as React from 'react';\nimport { useRemoteData, WithRemoteData } from 'use-remote-data';\n\nvar i = 0;\nconst freshData = (): Promise<number> =>\n    new Promise((resolve) => {\n        i += 1;\n        setTimeout(() => resolve(i), 1000);\n    });\n\nexport const Component: React.FC = () => {\n    const [dep, setDep] = React.useState(1);\n    const store = useRemoteData(freshData, { dependencies: [dep] });\n\n    return (\n        <div>\n            <button onClick={() => setDep(dep + 1)}>Bump dep</button>\n            <br />\n            <WithRemoteData store={store}>\n                {(num, isInvalidated) => <span style={{ color: isInvalidated ? 'darkgray' : 'black' }}>{num}</span>}\n            </WithRemoteData>\n        </div>\n    );\n};\n"},4990:function(e,t,n){"use strict";n.r(t),t.default="import * as React from 'react';\nimport { useRemoteData, WithRemoteData } from 'use-remote-data';\n\nvar i = 0;\nconst freshData = (): Promise<number> =>\n    new Promise((resolve) => {\n        i += 1;\n        setTimeout(() => resolve(i), 1000);\n    });\n\nexport const Component: React.FC = () => {\n    const [autoRefresh, setAutoRefresh] = React.useState(true);\n    const store = useRemoteData(freshData, { ttlMillis: autoRefresh ? 1000 : undefined });\n\n    return (\n        <div>\n            <label>\n                Autorefresh:\n                <input type=\"checkbox\" onChange={(e) => setAutoRefresh(!autoRefresh)} checked={autoRefresh} />\n            </label>\n            <br />\n            <WithRemoteData store={store}>\n                {(num, isInvalidated) => <span style={{ color: isInvalidated ? 'darkgray' : 'black' }}>{num}</span>}\n            </WithRemoteData>\n        </div>\n    );\n};\n"},6791:function(e,t,n){"use strict";n.r(t),t.default="import * as React from 'react';\nimport { useRemoteData, WithRemoteData } from 'use-remote-data';\n\nconst createUser = (name: string): Promise<string> =>\n    new Promise((resolve) => {\n        setTimeout(() => resolve(`created user with name ${name} and id #1`), 1000);\n    });\n\nexport const Component: React.FC = () => {\n    const [name, setName] = React.useState('');\n    const [submit, setSubmit] = React.useState(false);\n    const createUserStore = useRemoteData(() => createUser(name), { ttlMillis: 2000 });\n\n    return (\n        <div>\n            <h4>Create user</h4>\n            <label>\n                name:\n                <input onChange={(e) => setName(e.currentTarget.value)} value={name} />\n            </label>\n            <button onClick={() => setSubmit(true)}>Create user</button>\n            {submit && <WithRemoteData store={createUserStore}>{(msg) => <p>{msg}</p>}</WithRemoteData>}\n        </div>\n    );\n};\n"},5735:function(e,t,n){"use strict";n.r(t),t.default="import * as React from 'react';\nimport { RemoteDataStore, useRemoteData, WithRemoteData } from 'use-remote-data';\n\nvar i = 0;\nconst freshData = (): Promise<number> =>\n    new Promise((resolve) => {\n        i += 1;\n        setTimeout(() => resolve(i), 1000);\n    });\n\nexport const Component: React.FC = () => {\n    const store = useRemoteData(freshData, { ttlMillis: 2000 });\n\n    return (\n        <div>\n            <Child store={store} />\n            <Child store={store} />\n        </div>\n    );\n};\n\nexport const Child: React.FC<{ store: RemoteDataStore<number> }> = ({ store }) => (\n    <WithRemoteData store={store}>\n        {(num, isInvalidated) =>\n          <p><span style={{ color: isInvalidated ? 'darkgray' : 'black' }}>{num}</span></p>\n        }\n    </WithRemoteData>\n);\n"},5362:function(e,t,n){var a={"./basic_usage.tsx":208,"./combine.tsx":407,"./dynamic.tsx":4883,"./handling_failure.tsx":4598,"./invalidation.tsx":5136,"./invalidation_dependencies.tsx":2086,"./invalidation_sometimes.tsx":4990,"./update.tsx":6791,"./use_twice.tsx":5735};function r(e){var t=o(e);return n(t)}function o(e){if(!n.o(a,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return a[e]}r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=5362},2523:function(e,t,n){var a={"./basic_usage":8005,"./basic_usage.tsx":8005,"./combine":7934,"./combine.tsx":7934,"./dynamic":6486,"./dynamic.tsx":6486,"./handling_failure":4872,"./handling_failure.tsx":4872,"./invalidation":7172,"./invalidation.tsx":7172,"./invalidation_dependencies":6153,"./invalidation_dependencies.tsx":6153,"./invalidation_sometimes":8917,"./invalidation_sometimes.tsx":8917,"./update":8073,"./update.tsx":8073,"./use_twice":3426,"./use_twice.tsx":3426};function r(e){var t=o(e);return n(t)}function o(e){if(!n.o(a,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return a[e]}r.keys=function(){return Object.keys(a)},r.resolve=o,e.exports=r,r.id=2523}}]);