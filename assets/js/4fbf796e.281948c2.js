"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[574],{2627:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>l,frontMatter:()=>o,metadata:()=>a,toc:()=>p});const a=JSON.parse('{"id":"updates","title":"Updates (Write Operations)","description":"Your application might need to send data back to the server.","source":"@site/docs/updates.mdx","sourceDirName":".","slug":"/updates","permalink":"/use-remote-data/docs/updates","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/edit/master/website/docs/updates.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Sharing Data with Child Components","permalink":"/use-remote-data/docs/sharing-data-with-children"},"next":{"title":"Combining stores","permalink":"/use-remote-data/docs/combining-stores"}}');var r=s(4848),n=s(8453),i=s(8794);const o={},d="Updates (Write Operations)",c={},p=[];function u(e){const t={code:"code",h1:"h1",header:"header",p:"p",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"updates-write-operations",children:"Updates (Write Operations)"})}),"\n",(0,r.jsxs)(t.p,{children:["Your application might need to send data back to the server.\nWhile ",(0,r.jsx)(t.code,{children:"use-remote-data"})," focuses on read operations,\nyou can still integrate writes by calling out to the server in your components.\nAfter a successful write,\ncall ",(0,r.jsx)(t.code,{children:"invalidate()"})," or ",(0,r.jsx)(t.code,{children:"triggerUpdate()"})," to refresh any store that depends on the changed data."]}),"\n",(0,r.jsx)(i.Y,{snippet:"create"})]})}function l(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}}}]);